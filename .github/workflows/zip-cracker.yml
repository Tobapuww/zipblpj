name: DirectZipCracker

on:
  workflow_dispatch:
    inputs:
      zip_url:
        description: '目标压缩包直链地址'
        required: true

jobs:
  crack:
    runs-on: ubuntu-22.04
    timeout-minutes: 240

    steps:
    # 使用大容量分区
    - name: 创建工作区
      run: |
        sudo mkdir -p /mnt/workspace
        sudo chown -R runner:docker /mnt/workspace
        echo "WORKSPACE=/mnt/workspace" >> $GITHUB_ENV

    # 基础环境配置
    - name: 安装依赖
      working-directory: ${{ env.WORKSPACE }}
      run: |
        sudo apt update
        sudo apt install -y unrar
        git clone https://github.com/asaotomo/ZipCracker.git

    # 分步解压流程
    - name: 处理字典文件
      working-directory: ${{ env.WORKSPACE }}/ZipCracker
      run: |
        # 分阶段下载解压
        for part in {1..4}; do
            echo "正在处理分卷 part000${part}"
            wget "https://github.com/Tobapuww/zipblpj/raw/main/dit.rar/28G爆破字典/28GBwordlist.part000${part}.rar"
            
            # 立即解压并删除分卷
            unrar x -y "28GBwordlist.part000${part}.rar"
            rm "28GBwordlist.part000${part}.rar"
            
            # 空间验证
            if [ $(df /mnt/workspace --output=avail | tail -n1) -lt 5000000 ]; then
                echo "::error::磁盘空间不足！"
                exit 1
            fi
        done

        # 合并最终字典
        mv "28G爆破字典/acdc's dictionary.txt" ./
        rm -rf "28G爆破字典"

    # 执行核心脚本
    - name: 运行破解程序
      working-directory: ${{ env.WORKSPACE }}/ZipCracker
      run: |
        wget -O target.zip "${{ github.event.inputs.zip_url }}"
        python3 ZipCracker.py target.zip "acdc's dictionary.txt" > raw_output.txt

        # 立即清理字典文件
        rm "acdc's dictionary.txt"
        rm target.zip

    # 结果处理
    - name: 保存结果
      working-directory: ${{ env.WORKSPACE }}/ZipCracker
      uses: actions/upload-artifact@v4
      with:
        name: crack_result
        path: raw_output.txt
